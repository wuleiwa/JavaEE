<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--1 目标类-->

    <bean id = "userDao" class="jdk.UserDaoImpl"/>
    <!--2 切面类-->
    <bean id="myAspect" class="aspectj.MyAspect"/>
    <!--3 aop编程-->
    <aop:config>
        <!--配置切面-->
        <aop:aspect ref="myAspect">
            <!--3.1 配置切入点，通知最后增强哪些方法-->
            <aop:pointcut id="myPointCut" expression="execution(* jdk.*.*(..))"/>
            <!--3.2 关联通知Advice和切入点pointCut-->
            <!--3.2.1 前置通知-->
            <aop:before method="myBefore" pointcut-ref="myPointCut"/>
            <!--3.2.2后置通知，在方法返回之后执行，就可以获得返回值returning属性;用于设置后置通知的第二个参数的名称，类型是Object-->
            <aop:after-returning method="myAfterReturning" pointcut-ref="myPointCut" returning="joinPoint"/>
            <!--3.2.3环绕通知-->
            <aop:around method="myAround" pointcut-ref = "myPointCut"/>
            <!--3.2.4 抛出通知：用于处理程序发生异常
            *注意：如果程序没有异常将不会执行增强
            *throwing属性：用于设置通知第二个参数的名称，类型Throwable-->
            <aop:after-throwing method="myAfterThrowing" pointcut-ref="myPointCut" throwing="e"/>
            <!--3.2.5 最终通知：无论程序发生什么事，都将执行-->
            <aop:after method="myAfter" pointcut-ref="myPointCut"/>
        </aop:aspect>
    </aop:config>
    <!--&lt;!&ndash;3 使用Spring代理工厂定义一个名称为userDaoProxy的代理对象&ndash;&gt;
    <bean id="userDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        &lt;!&ndash;3.1 定义代理实现的接口&ndash;&gt;
        <property name="proxyInterfaces" value="UserDao"/>
        &lt;!&ndash;3.2 指定目标对象&ndash;&gt;
        <property name="target" ref = "userDao"/>
        &lt;!&ndash;3.3 指定切面，植入环绕通知&ndash;&gt;
        <property name="interceptorNames" value="myAspect"/>
        &lt;!&ndash;3.4 指定代理方式，true：使用cglib，false（默认）：使用jdk动态代理&ndash;&gt;
        <property name="proxyTargetClass" value="true"/>
    </bean>-->
</beans>